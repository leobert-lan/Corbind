/*
 * Copyright 2019 Vladimir Raupov
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {

    ext {
        versions = [
                'kotlin': '1.5.20',
                'kotlin_coroutines': '1.5.0',
                'android_gradle': '4.2.2',
                'androidx': [
                        'core': '1.6.0',
                        'annotation': '1.2.0',
                        'appcompat': '1.3.0',
                        'drawerlayout': '1.1.1',
                        'leanback': '1.0.0',
                        'navigation': '2.3.5',
                        'recyclerview': '1.2.1',
                        'slidingpanelayout': '1.1.0',
                        'swiperefreshlayout': '1.1.0',
                        'viewpager': '1.0.0',
                        'viewpager2': '1.0.0',
                        'lifecycle': '2.3.1',
                        'activity': '1.2.3'
                ],
                'material': '1.4.0',
                'ktlint': '0.40.0',
                'dokka': '0.10.1'
        ]

        deps = [
                'kotlin': [
                        'stdlib': [
                                'jdk6': "org.jetbrains.kotlin:kotlin-stdlib:${versions.kotlin}",
                                'jdk8': "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${versions.kotlin}"
                        ],
                        'coroutines': [
                                'core': "org.jetbrains.kotlinx:kotlinx-coroutines-core:${versions.kotlin_coroutines}",
                                'jdk8': "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:${versions.kotlin_coroutines}",
                                'android': "org.jetbrains.kotlinx:kotlinx-coroutines-android:${versions.kotlin_coroutines}"
                        ]
                ],
                'androidx': [
                        'core': "androidx.core:core:${versions.androidx.core}",
                        'annotation': "androidx.annotation:annotation:${versions.androidx.annotation}",
                        'appcompat': "androidx.appcompat:appcompat:${versions.androidx.appcompat}",
                        'drawerlayout': "androidx.drawerlayout:drawerlayout:${versions.androidx.drawerlayout}",
                        'leanback': "androidx.leanback:leanback:${versions.androidx.leanback}",
                        'navigation': "androidx.navigation:navigation-runtime:${versions.androidx.navigation}",
                        'recyclerview': "androidx.recyclerview:recyclerview:${versions.androidx.recyclerview}",
                        'slidingpanelayout': "androidx.slidingpanelayout:slidingpanelayout:${versions.androidx.slidingpanelayout}",
                        'swiperefreshlayout': "androidx.swiperefreshlayout:swiperefreshlayout:${versions.androidx.swiperefreshlayout}",
                        'viewpager': "androidx.viewpager:viewpager:${versions.androidx.viewpager}",
                        'viewpager2': "androidx.viewpager2:viewpager2:${versions.androidx.viewpager2}",
                        'lifecycle': "androidx.lifecycle:lifecycle-runtime-ktx:${versions.androidx.lifecycle}",
                        'activity': "androidx.activity:activity:${versions.androidx.activity}"
                ],
                'material': "com.google.android.material:material:${versions.material}"
        ]

        buildConfig = [
                'compileSdk': 30,
                'minSdk': 14,
                'targetSdk': 30
        ]
    }

    repositories {
        mavenCentral()
        google()
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        // Android gradle
        classpath "com.android.tools.build:gradle:${versions.android_gradle}"

        // Kotlin
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"

        // Dokka
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:${versions.dokka}"
    }

}


plugins {
    id "com.diffplug.spotless" version "5.14.0"
    id 'com.github.ben-manes.versions' version '0.39.0'
    id "io.gitlab.arturbosch.detekt" version "1.17.1"
}


allprojects {

    repositories {
        mavenCentral()
        google()
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }

}


subprojects {

    group = GROUP
    version = VERSION_NAME

    apply plugin: 'com.diffplug.spotless'
    spotless {
        kotlin {
            target "**/*.kt"
            targetExclude("$buildDir/**/*.kt")
            targetExclude('bin/**/*.kt')

            ktlint(versions.ktlint)
            licenseHeaderFile rootProject.file('spotless/copyright.kt')
        }
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            // Treat all Kotlin warnings as errors
            allWarningsAsErrors = true

            // Enable experimental coroutines APIs
            freeCompilerArgs += "-Xuse-experimental=kotlinx.coroutines.ObsoleteCoroutinesApi"
            freeCompilerArgs += "-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi"
        }
    }

}


detekt {
    toolVersion = "1.16.0"

    failFast = false
    buildUponDefaultConfig = true

    config = files("default-detekt-config.yml")
    input = files(
            "corbind/src/main/kotlin",
            "corbind-activity/src/main/kotlin",
            "corbind-appcompat/src/main/kotlin",
            "corbind-core/src/main/kotlin",
            "corbind-drawerlayout/src/main/kotlin",
            "corbind-leanback/src/main/kotlin",
            "corbind-lifecycle/src/main/kotlin",
            "corbind-material/src/main/kotlin",
            "corbind-navigation/src/main/kotlin",
            "corbind-recyclerview/src/main/kotlin",
            "corbind-slidingpanelayout/src/main/kotlin",
            "corbind-swiperefreshlayout/src/main/kotlin",
            "corbind-viewpager/src/main/kotlin",
            "corbind-viewpager2/src/main/kotlin"
    )
    parallel = true

    reports {
        html.enabled = true
        xml.enabled = false
        txt.enabled = false
    }
}


configurations.all {
    resolutionStrategy {
        eachDependency { details ->
            // Force all Kotlin stdlib artifacts to use the same version.
            if (details.requested.group == 'org.jetbrains.kotlin'
                    && details.requested.name.startsWith('kotlin-stdlib')) {
                details.useVersion versions.kotlin
            }
        }
    }
}


def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL']
            .any { it -> version.toUpperCase().contains(it) }
    def regex = /^[0-9,.v-]+(-r)?$/
    return !stableKeyword && !(version ==~ regex)
}

dependencyUpdates {
    rejectVersionIf {
        isNonStable(it.candidate.version)
    }
}
